default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    # Login to Gitlab Registry
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin

stages:
  - lint
  - test
  - coverage
  - docs
  - build-prod
  - deploy-prod


variables:
  PYTHONPATH: "$CI_PROJECT_DIR/src"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - .pytest_cache
    - __pycache__

.default_settings:
  before_script:
    - python --version
    - pip install --no-cache-dir -r requirements.txt
    - mkdir -p tests/reports
    - mkdir -p tests/artefacts
    - export PYTHONPATH=$CI_PROJECT_DIR/src

lint:
  stage: lint
  extends: .default_settings
  tags:
    - docker
  allow_failure: true
  script:
    - ruff check src -v    

test:
  stage: test
  extends: .default_settings
  tags:
    - docker
  allow_failure: false  
  script:
    - coverage run -m pytest -v
  variables:
    CLOCKIFY_TOKEN: $CLOCKIFY_TOKEN
    GITLAB_TOKEN: $GITLAB_TOKEN
  artifacts:
    paths:
      - .coverage
      - tests/reports/*.html
      - tests/artefacts/
    expire_in: 1 week

coverage:
  stage: coverage
  extends: .default_settings
  tags:
    - docker
  allow_failure: true  
  script:
    - if [ -f .coverage ]; then coverage report -m; fi
    - if [ -f .coverage ]; then coverage html -d tests/reports/coverage_html; fi
  artifacts:
    paths:
      - tests/reports/coverage_html/
    expire_in: 1 week


docs:
  stage: docs
  extends: .default_settings
  tags:
    - docker
  script:
    - mkdocs build
  artifacts:
    paths:
      - site/
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'


build-prod:
  stage: build-prod
  environment: production
  tags:
    - dind
  script:
    - docker build -t gitlab.dclabra.fi:4567/projektiopinnot-4-digitaaliset-palvelut/palikkapalvelut .
    - docker push gitlab.dclabra.fi:4567/projektiopinnot-4-digitaaliset-palvelut/palikkapalvelut
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy-prod:
  stage: deploy-prod
  tags:
    - shell
  environment: production
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOYMENT_SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh $SSH_USER@$DEPLOYMENT_SERVER "
      echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u "$CI_REGISTRY_USER" --password-stdin &&
      docker pull gitlab.dclabra.fi:4567/projektiopinnot-4-digitaaliset-palvelut/palikkapalvelut
      "
    - echo "Application successfully deployed."

  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'